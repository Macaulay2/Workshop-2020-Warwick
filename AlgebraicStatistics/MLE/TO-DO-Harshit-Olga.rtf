{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Topological functions optional arguments and tests- Harshit (before Tue)\
Convert real list to rational list and tests- Harshit (before Tue)\
Decode labeledGraph, graph LabeledGraph, net LabeledGraph, toString LabeledGraph and document it and tests- Harshit (before Tue, maybe)\
DONE partitionLMG documentation - Olga (before Tue)\
DONE graphComponents and graphFunctions in indexLabelGraph - make local or add doc - Olga (before Tue)\
DONE hasMultipleEdges - Olga (before Tue)\
Check the meaning of descendants, etc for MixedGraphs and Bigraphs and update/document functions - Olga (before Tue, send email to Group)\
\
DONE Tests - Olga\
\
\
Figure out what to do with newDigraph and SortedDigraph - Harshit\
\
!!descendants (MixedGraph, Thing) := (G,v) -> descendents(digraph G, v)\
nondescendents (MixedGraph, Thing) := (G,v) -> nondescendents(digraph G, v)\
!! parents (MixedGraph, Thing) := (G,v) -> parents(digraph G, v)\
foreFathers (MixedGraph, Thing) := (G,v) -> foreFathers(digraph G, v)\
!! children (MixedGraph, Thing) := (G,v) -> children(digraph G, v)\
neighbours (MixedGraph, Thing) := (G,v) -> neighbors(G#graph#Graph, v)\
nonneighbors (MixedGraph, Thing) := (G,v) -> nonneighbors(G#graph#Graph, v)\
\
arrowPOint\
FindPaths\
Distance\
DistanceMatrix\
Diameter\
Edges}