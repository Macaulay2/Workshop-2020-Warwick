}
genStats<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp(t(sample[,,i])%*%(sample[,,i]))
statsM[i,]<-stats
}
return(statsM)
}
# uncolored 4-cycle
statVector<-c(1,5,6,10,11,13,15,16)
statsComp<-function(m){
return(c(m)[statVector])
}
stats4<-genStats(1,4,4,5000,length(statVector))
stats3<-genStats(1.1,4,3,5000,length(statVector))
summary(stats4[,statId])
summary(stats3[,statId])
stats3<-genStats(1.2,4,3,5000,length(statVector))
summary(stats4[,statId])
summary(stats3[,statId])
stats3<-genStats(1.15,4,3,5000,length(statVector))
summary(stats4[,statId])
summary(stats3[,statId])
stats3<-genStats(1.1,4,3,5000,length(statVector))
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats4[,statId])
summary(stats3[,statId])
wilcox.test(stats4,stats3)
stats2<-genStats(1.2,4,2,5000,length(statVector))
summary(stats4[,statId])
summary(stats2[,statId])
stats2<-genStats(1.3,4,2,5000,length(statVector))
summary(stats4[,statId])
summary(stats2[,statId])
stats2<-genStats(1.4,4,2,5000,length(statVector))
summary(stats4[,statId])
summary(stats2[,statId])
stats1<-genStats1(1.5,4,1,5000,length(statVector))
summary(stats4[,statId])
summary(stats1[,statId])
stats1<-genStats1(1.6,4,1,5000,length(statVector))
summary(stats4[,statId])
summary(stats1[,statId])
stats1<-genStats1(1.8,4,1,5000,length(statVector))
summary(stats1[,statId])
stats1<-genStats1(2,4,1,5000,length(statVector))
summary(stats1[,statId])
stats1<-genStats1(1.9,4,1,5000,length(statVector))
summary(stats1[,statId])
stats1<-genStats1(1.85,4,1,5000,length(statVector))
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,length(statVector))
stats3<-genStats(1.1,4,3,5000,length(statVector))
stats2<-genStats(1.3,4,2,5000,length(statVector))
stats1<-genStats1(1.85,4,1,5000,length(statVector))
write.table(stats4, "G18-4.csv", sep=",",  col.names=FALSE)
write.table(stats3, "G18-3.csv", sep=",",  col.names=FALSE)
write.table(stats2, "G18-2.csv", sep=",",  col.names=FALSE)
write.table(stats1, "G18-1.csv", sep=",",  col.names=FALSE)
numStats=7
statsComp<-function(m){
return(c(m[1,1]+m[3,3],m[2,2],m[4,4],m[1,2],m[2,3],m[3,4],m[1,4]))
}
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1,4,3,5000,numStats)
summary(stats4[,statId])
summary(stats3[,statId])
stats2<-genStats(1.1,4,2,5000,numStats)
summary(stats2[,statId])
stats2<-genStats(1.2,4,2,5000,numStats)
summary(stats2[,statId])
stats1<-genStats1(1.2,4,1,5000,numStats)
summary(stats1[,statId])
stats1<-genStats1(1.3,4,1,5000,numStats)
summary(stats1[,statId])
stats1<-genStats1(1.5,4,1,5000,numStats)
summary(stats1[,statId])
summary(stats4[,statId])
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1,4,3,5000,numStats)
stats2<-genStats(1.1,4,2,5000,numStats)
stats1<-genStats1(1.5,4,1,5000,numStats)
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
write.table(stats4, "G17-4.csv", sep=",",  col.names=FALSE)
write.table(stats3, "G17-3.csv", sep=",",  col.names=FALSE)
write.table(stats2, "G17-2.csv", sep=",",  col.names=FALSE)
write.table(stats1, "G17-1.csv", sep=",",  col.names=FALSE)
numStats=7
statsComp<-function(m){
return(c(m[1,1]+m[2,2],m[3,3],m[4,4],m[1,2],m[2,3],m[3,4],m[1,4]))
}
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.5,4,1,5000,numStats)
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
stats2<-genStats(1.4,4,2,5000,numStats)
summary(stats2[,statId])
stats1<-genStats1(1.6,4,1,5000,numStats)
summary(stats1[,statId])
stats1<-genStats1(1.8,4,1,5000,numStats)
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.9,4,1,5000,numStats)
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.9,4,1,5000,numStats)
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
stats1<-genStats1(1.7,4,1,5000,numStats)
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
numStats=7
statsComp<-function(m){
return(c(m[1,1]+m[2,2],m[3,3],m[4,4],m[1,2],m[2,3],m[3,4],m[1,4]))
}
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1,4,3,5000,numStats)
stats2<-genStats(1,4,2,5000,numStats)
stats1<-genStats1(1,4,1,5000,numStats)
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=2
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=4
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=5
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=6
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=7
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.7,4,1,5000,numStats)
write.table(stats4, "G16-4.csv", sep=",",  col.names=FALSE)
write.table(stats3, "G16-3.csv", sep=",",  col.names=FALSE)
write.table(stats2, "G16-2.csv", sep=",",  col.names=FALSE)
write.table(stats1, "G16-1.csv", sep=",",  col.names=FALSE)
numStats=6
statsComp<-function(m){
return(c(m[1,1]+m[2,2]+m[3,3],m[4,4],m[1,2],m[2,3],m[3,4],m[1,4]))
}
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.7,4,1,5000,numStats)
statId=6
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=3
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=2
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
stats4<-genStats(1,4,4,5000,numStats)
stats3<-genStats(1.1,4,3,5000,numStats)
stats2<-genStats(1.3,4,2,5000,numStats)
stats1<-genStats1(1.7,4,1,5000,numStats)
write.table(stats4, "G15-4.csv", sep=",",  col.names=FALSE)
write.table(stats3, "G15-3.csv", sep=",",  col.names=FALSE)
write.table(stats2, "G15-2.csv", sep=",",  col.names=FALSE)
write.table(stats1, "G15-1.csv", sep=",",  col.names=FALSE)
numStats=35
statsComp<-function(m){
return(c(diag(m),c(m[1:5,6:10])))
}
genStats1<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp((matrix(sample[,,i]))%*%t(matrix(sample[,,i])))
statsM[i,]<-stats
}
return(statsM)
}
genStats<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp(t(sample[,,i])%*%(sample[,,i]))
statsM[i,]<-stats
}
return(statsM)
}
stats10<-genStats(1,10,10,5000,numStats)
stats9<-genStats(1,10,9,5000,numStats)
summary(stats10[,statId])
summary(stats9[,statId])
statId=15
summary(stats10[,statId])
summary(stats9[,statId])
stats10<-genStats(1,10,10,5000,numStats)
stats9<-genStats(1,10,9,5000,numStats)
stats8<-genStats(1,10,8,5000,numStats)
stats7<-genStats(1,10,7,5000,numStats)
stats6<-genStats(1,10,6,5000,numStats)
statId=15
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
statId=6
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
statId=4
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
statId=8
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
stats10<-genStats(1,10,10,5000,numStats)
stats9<-genStats(1.1,10,9,5000,numStats)
stats8<-genStats(1.1,10,8,5000,numStats)
stats7<-genStats(1.1,10,7,5000,numStats)
stats6<-genStats(1.1,10,6,5000,numStats)
stats5<-genStats(1.1,10,5,5000,numStats)
statId=8
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
stats10<-genStats(1,10,10,5000,numStats)
stats9<-genStats(1.1,10,9,5000,numStats)
stats8<-genStats(1.1,10,8,5000,numStats)
stats7<-genStats(1.1,10,7,5000,numStats)
stats6<-genStats(1.2,10,6,5000,numStats)
stats5<-genStats(1.2,10,5,5000,numStats)
statId=8
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
statId=6
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
stats10<-genStats(1,10,10,5000,numStats)
stats9<-genStats(1.2,10,9,5000,numStats)
stats8<-genStats(1.3,10,8,5000,numStats)
stats7<-genStats(1.4,10,7,5000,numStats)
stats6<-genStats(1.5,10,6,5000,numStats)
stats5<-genStats(1.6,10,5,5000,numStats)
stats4<-genStats(1.7,10,4,5000,numStats)
stats3<-genStats(1.8,10,3,5000,numStats)
stats2<-genStats(1.9,10,2,5000,numStats)
stats1<-genStats1(2,10,1,5000,numStats)
statId=6
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=2
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=15
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
statId=32
summary(stats10[,statId])
summary(stats9[,statId])
summary(stats8[,statId])
summary(stats7[,statId])
summary(stats6[,statId])
summary(stats5[,statId])
summary(stats4[,statId])
summary(stats3[,statId])
summary(stats2[,statId])
summary(stats1[,statId])
write.table(stats10, "K55-10.csv", sep=",",  col.names=FALSE)
write.table(stats9, "K55-9.csv", sep=",",  col.names=FALSE)
write.table(stats8, "K55-8.csv", sep=",",  col.names=FALSE)
write.table(stats7, "K55-7.csv", sep=",",  col.names=FALSE)
write.table(stats6, "K55-6.csv", sep=",",  col.names=FALSE)
write.table(stats5, "K55-5.csv", sep=",",  col.names=FALSE)
write.table(stats4, "K55-4.csv", sep=",",  col.names=FALSE)
write.table(stats3, "K55-3.csv", sep=",",  col.names=FALSE)
write.table(stats2, "K55-2.csv", sep=",",  col.names=FALSE)
write.table(stats1, "K55-1.csv", sep=",",  col.names=FALSE)
library("TDAstats")
# uncolored 4-cycle
numStats=35
statsComp<-function(m){
return(c(diag(m),c(m[1:5,6:10])))
}
genStats1<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp((matrix(sample[,,i]))%*%t(matrix(sample[,,i])))
statsM[i,]<-stats
}
return(statsM)
}
genStats<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp(t(sample[,,i])%*%(sample[,,i]))
statsM[i,]<-stats
}
return(statsM)
}
stats10<-genStats(1,10,10,1000,numStats)
stats9<-genStats(1,10,9,1000,numStats)
stats8<-genStats(1,10,8,1000,numStats)
stats7<-genStats(1,10,7,1000,numStats)
stats6<-genStats(1,10,6,1000,numStats)
stats5<-genStats(1,10,5,1000,numStats)
stats4<-genStats(1,10,4,1000,numStats)
stats3<-genStats(1,10,3,1000,numStats)
stats2<-genStats(1,10,2,1000,numStats)
stats1<-genStats1(1,10,1,1000,numStats)
stats10for10<-genStats(1,10,10,1000,numStats)
stats10for6<-genStats(1,10,10,1000,numStats)
stats10for5<-genStats(1,10,10,1000,numStats)
stats10for4<-genStats(1,10,10,1000,numStats)
stats10for3<-genStats(1,10,10,1000,numStats)
stats10for2<-genStats(1,10,10,1000,numStats)
stats10for1<-genStats(1,10,10,1000,numStats)
stats6aux<-genStats(1,10,6,1000,numStats)
stats5aux<-genStats(1,10,5,1000,numStats)
stats4aux<-genStats(1,10,4,1000,numStats)
stats3aux<-genStats(1,10,3,1000,numStats)
stats2aux<-genStats(1,10,2,1000,numStats)
stats1aux<-genStats(1,10,1,1000,numStats)
stats1aux<-genStats1(1,10,1,1000,numStats)
stats10.phom<-calculate_homology(stats10, dim=0)
stats6.phom<-calculate_homology(stats6, dim=0)
stats5.phom<-calculate_homology(stats5, dim=0)
stats4.phom<-calculate_homology(stats4, dim=0)
stats3.phom<-calculate_homology(stats3, dim=0)
stats2.phom<-calculate_homology(stats2, dim=0)
stats1.phom<-calculate_homology(stats1, dim=0)
stats6aux.phom<-calculate_homology(stats6aux, dim=0)
stats5aux.phom<-calculate_homology(stats5aux, dim=0)
stats4aux.phom<-calculate_homology(stats4aux, dim=0)
stats3aux.phom<-calculate_homology(stats3aux, dim=0)
stats2aux.phom<-calculate_homology(stats2aux, dim=0)
stats1aux.phom<-calculate_homology(stats1aux, dim=0)
wilcox.test(stats10.phom[,3],stats6.phom[,3])
wilcox.test(stats10.phom[,3],stats5.phom[,3])
wilcox.test(stats10.phom[,3],stats4.phom[,3])
wilcox.test(stats10.phom[,3],stats3.phom[,3])
wilcox.test(stats10.phom[,3],stats2.phom[,3])
wilcox.test(stats10.phom[,3],stats1.phom[,3])
joint10with6<-rbind(stats10for6,stats6) #need to use a different set of full rank stats to ensure independence
joint10with6.phom<-calculate_homology(joint10with6, dim=0)
joint10with10<-rbind(stats10for10,stats10) #need to use a different set of full rank stats to ensure independence
joint10with10.phom<-calculate_homology(joint10with10, dim=0)
wilcox.test(joint10with10.phom[,3],joint10with6.phom[,3])
library("TDAstats")
genStats1<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp((matrix(sample[,,i]))%*%t(matrix(sample[,,i])))
statsM[i,]<-stats
}
return(statsM)
}
genStats<-function(magn,numVar,r,sampleSize,numStats){
randL<-runif(numVar*r*sampleSize,-magn,magn)
sample<-array(randL,dim=c(r,numVar,sampleSize))
statsM<-matrix(,nrow = sampleSize, ncol = numStats)
for(i in 1:sampleSize){
stats<-statsComp(t(sample[,,i])%*%(sample[,,i]))
statsM[i,]<-stats
}
return(statsM)
}
# uncolored 4-cycle
statVector<-c(1,5,6,10,11,13,15,16)
statsComp<-function(m){
return(c(m)[statVector])
}
stats4<-genStats(0.1,4,4,5000,length(statVector))
stats3<-genStats(0.1,4,3,5000,length(statVector))
stats2<-genStats(0.1,4,2,5000,length(statVector))
stats1<-genStats1(0.1,4,1,5000,length(statVector))
write.table(stats4, "G18-4-01.csv", sep=",",  col.names=FALSE)
write.table(stats3, "G18-3-01.csv", sep=",",  col.names=FALSE)
write.table(stats2, "G18-2-01.csv", sep=",",  col.names=FALSE)
write.table(stats1, "G18-1-01.csv", sep=",",  col.names=FALSE)
