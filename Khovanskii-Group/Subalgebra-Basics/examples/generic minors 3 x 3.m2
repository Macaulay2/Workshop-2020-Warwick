genericMinors = (k, m, n) -> (
    -- k by k minors of a generic m by n matrix
    R = ZZ/101[x_(0,0) .. x_(m-1,n-1)];
		X = transpose genericMatrix(R, n, m);
    gens minors(k, X));

F = genericMinors(2,3,3);

ans = matrix {{x_(1,2)*x_(2,1)-x_(1,1)*x_(2,2), 
	x_(0,2)*x_(2,1)-x_(0,1)*x_(2,2), 
	x_(1,2)*x_(2,0)-x_(1,0)*x_(2,2), 
	x_(1,1)*x_(2,0)-x_(1,0)*x_(2,1),
  x_(0,2)*x_(2,0)-x_(0,0)*x_(2,2), 
	x_(0,1)*x_(2,0)-x_(0,0)*x_(2,1), 
	x_(0,2)*x_(1,1)-x_(0,1)*x_(1,2), 
	x_(0,2)*x_(1,0)-x_(0,0)*x_(1,2), 
	x_(0,1)*x_(1,0)-x_(0,0)*x_(1,1),
  x_(0,2)*x_(1,1)*x_(2,0)*x_(2,2)-x_(0,1)*x_(1,2)*x_(2,0)*x_(2,2)-x_(0,2)*x_(1,0)*x_(2,1)*x_(2,2)
			+x_(0,0)*x_(1,2)*x_(2,1)*x_(2,2)+x_(0,1)*x_(1,0)*x_(2,2)^2-x_(0,0)*x_(1,1)*x_(2,2)^2, 
	x_(0,0)*x_(0,2)*x_(1,1)*x_(2,0)-x_(0,0)*x_(0,1)*x_(1,2)*x_(2,0)-x_(0,0)*x_(0,2)*x_(1,0)*x_(2,1)
			+x_(0,0)^2*x_(1,2)*x_(2,1)+x_(0,0)*x_(0,1)*x_(1,0)*x_(2,2)-x_(0,0)^2*x_(1,1)*x_(2,2)}}

sB = time toString subalgebraBasis F
