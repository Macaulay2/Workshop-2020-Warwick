-- -*- coding: utf-8 -*-
------------------------------------------------------------------------------
-- Copyright 2017-20 Gregory G. Smith
--
-- This program is free software: you can redistribute it and/or modify it
-- under the terms of the GNU General Public License as published by the Free
-- Software Foundation, either version 3 of the License, or (at your option)
-- any later version.
--
-- This program is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
-- more details.
--
-- You should have received a copy of the GNU General Public License along
-- with this program.  If not, see <http://www.gnu.org/licenses/>.
------------------------------------------------------------------------------
-- DOCUMENTATION
------------------------------------------------------------------------------
undocumented {
    (expression, ToricReflexiveSheaf), 
    (net, ToricReflexiveSheaf), 
    (net, ToricReflexiveSheafMap),       
    subspacePoset,
    (subspacePoset, ToricReflexiveSheaf),
    (components, ToricReflexiveSheaf)
    }

doc ///
    Key
        ToricReflexiveSheaves 
    Headline
         data types and routines for working with toric reflexive sheaves
    Description
        Text
            This package is designed for experimenting with toric reflexive
            sheaves on a normal toric variety.  This software may eventually
            be incorporated into the NormalToricVarieties package.
///


doc ///
    Key
        ToricReflexiveSheaf
    Headline
        the class of all toric reflexive sheaves
    Description
        Text       
            A reflexive sheaf is a coherent sheaf that is isomorphic to its
            second dual (as a sheaf of modules) via the canonical map.  Since
            any locally-free sheaf is reflexive and any reflexive sheaf is
            torsion-free, reflexive sheaves form a wider class than the
            locally-free sheaves, but are not as general as all torsion-free
            sheaves.
       
            A toric reflexive sheaf on a normal toric variety is a
            torus-equivariant reflexive sheaf.  In other words, it is a
            reflexive sheaf equipped with a torus-action that is compatible
            with the natural torus-action on the underlying toric variety.
            Theorem 1.3.2 in Klyachko's
            @HREF("http://www.mpim-bonn.mpg.de/preblob/4712", "Vector bundles
            and torsion free sheaves on the projective plane")@ establishes
            that the category of toric reflexive sheaves is equivalent to the
            category of vector spaces with a family of separated exhaustive
            decreasing filtrations indexed by the irreducible torus-invariant
            divisors.  
///


doc ///
    Key
        (describe, ToricReflexiveSheaf)
    Headline
        displays the defining data
    Usage
        describe E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Net         
            a formatted array of the weighted bases defining the filtrations
            corresponding to each irreducible torus-invariant divisor
    Description
        Text
            For brevity, a @TO "ToricReflexiveSheaf"@ typically acquires the
            name of the global variable to which it was assigned.  The methods
            allows one to see the underlying data defining the toric reflexive
            sheaf.
        Text 
            The integers in the left column of the formatted array correspond
            to the irreducible torus-invariant divisors on the underlying
            toric variety; the rays in the fan are ordered and indexed by
            nonnegative integers; see 
            @TO "NormalToricVarieties::normalToricVariety"@.  The vector space
            corresponding to the fibre of a toric reflexive sheaf over the
            identity in the torus is realized as a linear subspace in a
            homogeneous component of a graded @TO2 ("PolynomialRing",
            "polynomial ring")@; see @TO (ambient, ToricReflexiveSheaf)@.  For
            a given irreducible torus-invariant divisor, the corresponding
            rows in the formatted array list homogeneous @TO2("RingElement",
            "ring elements")@ of the appropriate degree in this ambient ring
            together with the associated integer weight.  The $j$-th linear
            subspace in the filtration is the homogeneous component of the
            ideal generated by all the ring elements with weight greater than
            or equal to $j$.
        Text
            The tangent bundle on the projective plane has rank two.  
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}}
            TX = toricReflexiveSheaf(W,X)
            describe TX
            subspace(0,-infinity,TX)              
            subspace(0,0,TX)
            subspace(0,1,TX)
            subspace(0,2,TX)
            subspace(0,infinity,TX)    
        Text
            The toric reflexive sheaf associated to a toric divisor has rank
            one.
        Example
            E = toricReflexiveSheaf(2*X_0)
            describe E
            subspace(1,-infinity,E)              
            subspace(1,0,E)
            subspace(1,1,E)
            subspace(1,infinity,E)   
        Text
            There is a unique sheaf of rank zero on any variety.
        Example
            Z = toricReflexiveSheaf X
	    Z == 0
            describe Z
            subspace(2,-infinity,Z)              
            subspace(2,0,Z)
            subspace(2,1,Z)
            subspace(2,infinity,Z)   	    
    SeeAlso
        toricReflexiveSheaf 
        subspace
	(toricReflexiveSheaf, NormalToricVariety)
///


doc ///
    Key
        (ambient, ToricReflexiveSheaf)
    Headline
        get the corresponding ambient vector space
    Usage
        (R, d) = ambient E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Sequence
            where {\tt R} is a @TO2("PolynomialRing", "polynomial ring")@ and
            {\tt d} is a @TO2("List", "list")@ of integers corresponding to a
            degree in {\tt R}
    Description
        Text
            The vector space corresponding to the fibre of a toric reflexive
            sheaf over the identity in the torus is realized as a linear
            subspace in the homogeneous component of degree {\tt d} in a
            graded @TO2("PolynomialRing", "polynomial ring")@ {\tt R}.  This
            method returns the pair {\tt (R,d)} as a @TO Sequence@.
        Text
            Most often {\tt R} is a standard graded polynomial ring and 
	    {\tt d} is simply $\{ 1\}$.  For instance, our favourite
            construction of the tangent bundle on the projective plane
            realizes the ambient vector space as the degree-one component of a
            standard graded polynomial ring in two variables.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}}
            TX = toricReflexiveSheaf(W,X);
	    toricProjectiveSpace 3
            ambient TX
            E = toricReflexiveSheaf(2*X_0)
            ambient E
            F = toricReflexiveSheaf(2*X_0) ++ toricReflexiveSheaf(3*X_1 - X_2)
            ambient F
    SeeAlso
        toricReflexiveSheaf 
///


doc ///
    Key
        (variety, ToricReflexiveSheaf)
        (normalToricVariety, ToricReflexiveSheaf)
    Headline
        get the underlying normal toric variety 
    Usage
        variety E
        normalToricVariety E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : NormalToricVariety
    Description
        Text
            This method returns the underlying normal toric variety on which
            the reflexive sheaf is defined.       
        Text
            For the tangent bundle on the projective plane or the line bundle
            associated to a toric divisor, we have the following.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}}
            TX = toricReflexiveSheaf(W, X);
            variety TX
            E = toricReflexiveSheaf(2*X_0)
            variety E
	    assert (variety E === normalToricVariety E)
	    assert (variety E === X)
    SeeAlso
        toricReflexiveSheaf 
        NormalToricVariety
///


doc ///
    Key
        (rank, ToricReflexiveSheaf)
    Headline
        get the rank 
    Usage
        rank E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : ZZ
    Description
        Text
            Over an integral scheme, the rank of a coherent sheaf is the
            dimension as a vector space over the function field of the fibre
            over the generic point.  For a torsion-free sheaf, this equals the
            dimension of the fiber over any point.
     
            The rank of a toric reflexive sheaf equals the dimension of the
            vector space corresponding to the fibre of a toric reflexive sheaf
            over the identity in the torus; see 
            @TO (ambient, ToricReflexiveSheaf)@.
        Text
            The tangent bundle on the projective plane has rank two.  
        Example
            X = toricProjectiveSpace 2;
            TX = toricTangentBundle X;
            rank TX
            (R, d) = ambient TX;
            hilbertFunction(d, module subspace(0, -infinity, TX))
	    assert (isWellDefined TX and rank TX === 2)
        Text
            The toric reflexive sheaf associated to a toric divisor has rank
            one.
        Example
            L = toricReflexiveSheaf(2*X_0);
            rank L
	    assert (isWellDefined L and rank L === 1)
        Text
            The rank of a direct sum is the sum of the rank of the summands.
        Example
            E = TX ++ L;
            rank E
	    assert (isWellDefined E and rank E === 3)
	Text 
	    There is a unique sheaf having rank zero.
	Example
	    Z = toricReflexiveSheaf X;
	    rank Z
	    assert (isWellDefined Z and Z == 0)
    SeeAlso
        (ambient, ToricReflexiveSheaf) 
///
 
 
doc ///
    Key
        (isWellDefined, ToricReflexiveSheaf)
    Headline
        whether a toric reflexive sheaf is well-defined
    Usage
        isWellDefined E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Boolean 
	    that is @TO true@ if the list of lists of pairs of ring elements
       	    and integers determine a toric reflexive sheaf
    Description
        Text
            The input data determines a toric reflexive sheaf on a normal
            toric variety if, for each irreducible torus-invariant divisor (or
            ray in the fan), the following conditions hold:
    	Text        
            @UL {
		{"each ", TO2(RingElement, "ring element"), " belongs to the ",
           	    TO2((ambient,ToricReflexiveSheaf), "ambient ring,")},
                {"each ring element is homogeneous,"},
                {"the degree of each ring element equals the ",
                    TO2((ambient,ToricReflexiveSheaf), "ambient degree,")},
                {"the ring elements form a basis for the homogeneous component
          	    in the ambient degree of the ideal they generate," },
    	    	{"and, the ideals generated by the ring elements for each
       		    irreducible torus-invariant divisor are all equal."}
	    }@
        Text 
            Our favourite example, namely the tangent bundle on the projective
            plane, is well-defined.
	Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
       	    W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
       	    TX = toricReflexiveSheaf(W, X)
	    describe TX
       	    isWellDefined TX
	    assert isWellDefined TX
    	Text
	    The next examples illustrate various ways that the input can fail
       	    to define a toric reflexive sheaf.  By making the current
       	    debugging level greater than one, one gets some addition
       	    information about the nature of the failure.
    	Example       
       	    debugLevel = 1;
            W1 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_3,1),(e_1,0)}};
            E1 = toricReflexiveSheaf(W1, X);
            isWellDefined E1
            e_3
	    assert not isWellDefined E1
    	Example
       	    W2 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2+1,1),(e_1,0)}};
            E2 = toricReflexiveSheaf(W2, X);
            isWellDefined E2
            isHomogeneous W2#2#0#0
	    assert not isWellDefined E2	 
    	Example	       
       	    W3 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2^2,1),(e_1,0)}};
            E3 = toricReflexiveSheaf(W3, X);
            isWellDefined E3
            degree W3#2#0#0 =!= (ambient E3)#1
	    assert not isWellDefined E3
    	Example	    
       	    W4 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(2*e_1,1),(e_1,0)}};
            E4 = toricReflexiveSheaf(W4, X);
            isWellDefined E4
            rank E4 == rank source mingens ideal keys E4#2
	    assert not isWellDefined E4
    	Example	 	    
       	    R' = QQ[e_1,e_2,e_3];
            W5 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_3,1),(e_1,0)}};
            E5 = toricReflexiveSheaf(W5, X);
       	    isWellDefined E5
       	    ideal keys E5#2 != ideal keys E5#0
	    assert not isWellDefined E5   
	Text
	    This method also checks that the following aspects of the data
	    structure:
    	Text	    
       	    @UL {
           	{"the underlying ", TO HashTable, " has the expected keys,
         	    namely integers, ", TT "ambient", ", ", TT "rank", ", ",
         	    TT "variety", ", and ", TT "cache"},
                {"the value for each integer keys is a ", TO HashTable},
                {"the key of each HashTable associated to an integer is a ",
           	    TO RingElement},
                {"the value of each HashTable associated to an integer is an ", 
           	    TO ZZ},
                {"the value of the ", TT "ambient", " key is a ", 
		    TO Sequence},
                {"the ", TT "ambient", " sequence has two entries"},
                {"the first entry in the ", TT "ambient", " sequence is a ",
           	    TO PolynomialRing},
                {"the second entry in the ", TT "ambient", " sequence is a ",
           	    TO List},
                {"the length of second entry in the ", TT "ambient", "
         	    sequence equals the degree length of the ambient ring"},
                {"each entry in second part of the ", TT "ambient", " sequence
           	    is an ", TO ZZ},
                {"the value of the ", TT "rank", " key is a ", TO ZZ},
                {"the value of the ", TT "variety", " key is a ", 
		    TO NormalToricVariety},
                {"the integer keys correspond to the irreducible
         	    torus-invariant divisors on underlying normal toric
         	    variety"},
                {"the value of the ", TT "cache", " key is a ", TO CacheTable}
            }@
    SeeAlso 
        toricReflexiveSheaf
///
 
 
doc ///
    Key
        (symbol ==, ToricReflexiveSheaf, ZZ)
        (symbol ==, ZZ, ToricReflexiveSheaf)	
    Headline
        whether a toric reflexive sheaf is the zero sheaf
    Usage
        E == 0
    	0 == E
    Inputs
        E : ToricReflexiveSheaf
	0 : ZZ
    Outputs
        : Boolean
	    that is @TO true@ if the toric reflexive sheaf has rank zero	
    Description
        Text
            There us unique reflexive sheaf having rank zero.  This method
            determines whether a toric reflexive sheaf is this zero sheaf.
        Example
            X= toricProjectiveSpace 2;
            TX = toricTangentBundle X;
	    TX == 0
	    E = toricReflexiveSheaf X;
	    E == 0
	    rank E
	    assert (TX != 0 and 0 == E and isWellDefined E)
	Text
	    This method literally checks whether the toric reflexive sheaf has
	    rank zero.
	Example    	    
	    code (symbol ==, ToricReflexiveSheaf, ZZ)
    SeeAlso
        (toricReflexiveSheaf, NormalToricVariety)
	(isWellDefined, ToricReflexiveSheaf)
///


doc ///
    Key
        (toricReflexiveSheaf, List, NormalToricVariety)
        toricReflexiveSheaf
    Headline
        make a toric reflexive sheaf
    Usage
        toricReflexiveSheaf(W, X)
    Inputs
        W : List
            of lists of weighted bases.  For each irreducible torus-invariant
            divisor on the underlying toric variety, there is a list of pairs
            consisting of a homogeneous ring element in the ambient ring and
            its integer weight
        X : NormalToricVariety
	    that is the underlying variety
    Outputs
        : ToricReflexiveSheaf
    Description
        Text
            Theorem 1.3.2 in Klyachko's 
            @HREF ("http://www.mpim-bonn.mpg.de/preblob/4712","Vector bundles
                and torsion free sheaves on the projective plane")@ 
            establishes that the category of toric reflexive sheaves is
            equivalent to the category of vector spaces with a family of
            separated exhaustive decreasing filtrations indexed by the
            irreducible torus-invariant divisors.
       
            Since we assume that the irreducible torus-invariant divisors on
            the underlying toric variety (a.k.a. the rays in the fan) are
            ordered and indexed by nonnegative integers (see @TO
            "NormalToricVarieties::normalToricVariety"@), the $i$-th entry in
            the list {\tt W} naturally corresponds to the $i$-th irreducible
            torus-invariant divisor.  The vector space corresponding to the
            toric reflexive sheaf is realized as a linear subspace in a
            homogeneous component of a graded @TO2 ("PolynomialRing",
            "polynomial ring")@; see @TO (ambient, ToricReflexiveSheaf)@.  For
            a given irreducible torus-invariant divisor, the corresponding
            filtration is defined by a list of homogeneous @TO2("RingElement",
            "ring elements")@ of the appropriate degree in this ambient ring
            together with their associated integer weights.  The $j$-th linear
            subspace in the filtration is the homogeneous component of the
            ideal generated by all the ring elements with weight greater than
            or equal to $j$.
        Text
            Following Example 3.8 in 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@, 
            the tangent bundle on the projective plane may be constructed such
            that the ambient vector space is the degree-one homogeneous
            component of a standard graded polynomial ring in two variables.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}}
            TX = toricReflexiveSheaf(W,X)
            describe TX
            rank TX
            assert (isWellDefined TX and variety TX === X and rank TX === 2 and
		(ambient TX)#0 === R and (ambient TX)#1 === {1})
        Text
            Following Example 4.4 in 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@, 
            we construct a globally-generated rank-two toric vector bundle on
            the first Hirzebruch surface.
        Example
            Y = hirzebruchSurface 1;
            W' = {{(e_1,4),(e_2,-2)}, {(e_1,3),(e_2,2)}, {(e_2,5),(e_1,0)}, {(e_1+e_2,3),(e_1,-1)}}
            E = toricReflexiveSheaf(W',Y);
            describe E
            rank E
            assert (isWellDefined E and variety E === Y and rank E === 2 and
		(ambient E)#0 === R and (ambient E)#1 === {1})	    
    Caveat
        This method assumes that the input correctly encodes a toric reflexive
        sheaf.  One can verify this by using 
        @TO (isWellDefined, ToricReflexiveSheaf)@.
    SeeAlso
        (describe, ToricReflexiveSheaf)
        (isWellDefined, ToricReflexiveSheaf)
        (ambient, ToricReflexiveSheaf)
///
 
 
doc ///
    Key
        (toricReflexiveSheaf, NormalToricVariety)
    Headline
        make the zero sheaf
    Usage
        toricReflexiveSheaf X
    Inputs
        X : NormalToricVariety
    Outputs
        : ToricReflexiveSheaf
    Description
        Text
            There us unique reflexive sheaf having rank zero.  This method
            makes this sheaf.    
        Text
            We illustrate on the projective plane.
        Example
            X = toricProjectiveSpace 2;
	    Z = toricReflexiveSheaf X;
	    Z == 0
	    rank Z
	    assert (0 == Z and isWellDefined Z)	
    SeeAlso
        toricReflexiveSheaf 
        isArithmeticallyFree
        (toricDivisor, ToricReflexiveSheaf)
///


doc ///
    Key
        (toricReflexiveSheaf, ToricDivisor)
    Headline
        make a toric reflexive sheaf
    Usage
        toricReflexiveSheaf D
    Inputs
        D : ToricDivisor
    Outputs
        : ToricReflexiveSheaf
    Description
        Text
            Each toric divisor on a normal toric variety corresponds to a
            rank-one toric reflexive sheaf.  When the underlying variety is
            smooth, this rank-one sheaf is simply the corresponding line
            bundle.  Given a toric divisor, this method returns the
            corresponding rank-one toric reflexive sheaf.
        Text
            On the projective plane, an ample toric divisor corresponds to a
            line bundle.
        Example
            X = toricProjectiveSpace 2;
            D = 2*X_0 + 3*X_1 + 5*X_2
            assert (isAmple D and isEffective D)
            E = toricReflexiveSheaf(2*X_0 + 3*X_1 + 5*X_2);
            describe E
            rank E
	    assert (isWellDefined E and variety E === X and 
		isArithmeticallyFree E and rank E === 1)
        Text
            The structure sheaf on the underlying toric variety corresponds to
            the zero divisor.
        Example
            O = toricReflexiveSheaf(0*X_0)
            describe O
            rank O
	    0 == toricDivisor O
	    assert (isWellDefined O and variety O === X and 
		isArithmeticallyFree O and rank O === 1)	    
    SeeAlso
        toricReflexiveSheaf 
        isArithmeticallyFree
        (toricDivisor, ToricReflexiveSheaf)
///
 

doc ///
    Key
        (toricDivisor, ToricReflexiveSheaf)
    Headline
        make the toric divisor associated to a rank-one toric reflexive sheaf
    Usage
        D = toricDivisor E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        D : ToricDivisor
            if {\tt E} has rank-one then {\tt D} is the corresponds to a toric divisor
    Description
        Text
            Each toric divisor on a normal toric variety corresponds to a
            rank-one toric reflexive sheaf.  Given a rank-one toric reflexive
            sheaf, the method returns the corresponding toric divisor.
        Text       
            An torus-equivariant line bundle on the projective plane
            corresponds to a toric divisor.
        Example
            X = toricProjectiveSpace 2;
            L = toricReflexiveSheaf (2*X_0);
            toricDivisor L
	    assert (isWellDefined L and 2*X_0 == toricDivisor L)
        Text       
            The tangent bundle on the projective plane doesn't correspond to a
            single toric divisor, but its cover is the direct sum of three.
        Example	    
	    TX = toricTangentBundle X;
	    E = cover TX;
	    describe E
	    apply(components E, L -> toricDivisor L)
	    assert (null == try toricDivisor TX and # components E === 3)
    SeeAlso
        (toricReflexiveSheaf, ToricDivisor)
        isArithmeticallyFree
///




doc ///
    Key
    	(toricTangentBundle, NormalToricVariety)
	toricTangentBundle
    Headline
    	make the tangent bundle as a toric reflexive sheaf
    Usage
    	toricTangentBundle X
    Inputs
    	X : NormalToricVariety
    Outputs
    	: ToricReflexiveSheaf
	    that represents the tangent bundle on {\tt X}
    Description
    	Text
	    TODO: summarize and provide a reference to Klyachkos description
	Example
	    X = toricProjectiveSpace 2;
	    TX = toricTangentBundle X;
	    describe TX
	    assert (isWellDefined TX and rank TX === 2)
	Text	
	    TODO:  Euler sequence?	    
    SeeAlso
    	(toricCotangentBundle, NormalToricVariety)
///


doc ///
    Key
    	(toricCotangentBundle, NormalToricVariety)
	toricCotangentBundle
    Headline
    	make the cotangent bundle as a toric reflexive sheaf
    Usage
    	toricCotangentBundle X
    Inputs
    	X : NormalToricVariety
    Outputs
    	: ToricReflexiveSheaf
	    that represents the cotangent bundle on {\tt X}
    Description
    	Text
	    TODO: summarize and provide a reference to Klyachkos description
	Example
	    X = toricProjectiveSpace 2;
	    OmegaX = toricCotangentBundle X;
	    describe OmegaX
	    assert (isWellDefined OmegaX and rank OmegaX === 2)
	Text	
	    TODO:  Euler sequence?
    SeeAlso
    	(toricTangentBundle, NormalToricVariety)
///


doc ///
    Key
    	(trim, ToricReflexiveSheaf)
    Headline
    	change the ambient ring 
    Usage
    	trim E
    Inputs
    	E : ToricReflexiveSheaf
    Outputs
    	: ToricReflexiveSheaf
	    that is isomorphic to {\tt E} 
    Description
    	Text
	    TODO: explain what this does
	Example
	    X = toricProjectiveSpace 2;
	    OmegaX = toricCotangentBundle X;
	    describe OmegaX
	    assert (isWellDefined OmegaX and rank OmegaX === 2)
    SeeAlso
    	(ambient, ToricReflexiveSheaf)
///
 
 
doc ///
    Key
        (directSum, ToricReflexiveSheaf)
        (symbol ++, ToricReflexiveSheaf, ToricReflexiveSheaf)
    Headline
        make the direct sum of toric reflexive sheaves
    Usage
        F = E1 ++ E2
        F = directSum(E1,E2,...)
        F = directSum(name1 => E1, name2 => E2, ...)
    Inputs
        Ei : ToricReflexiveSheaf
    Outputs
        F : ToricReflexiveSheaf
            the direct sum of the input toric reflexive sheaves
    Description
    	Text
	    TODO: explain this construction
        Text     
            The direct sum of toric reflexive sheaves is another toric
            reflexive sheaf.
        Example
            (X,R) = (toricProjectiveSpace(2),QQ[e_1,e_2]);
            W1 = {{(-e_1-e_2,2),(e_1,0)},{(e_1,-1),(e_2,-2)},{(e_2,7),(e_1,-1)}};
            E1 = toricReflexiveSheaf(W1,X);
            describe E1
            W2 = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            E2 = toricReflexiveSheaf(W2,X);
            describe E2
            F1 = E1 ++ E2
            describe F1
            F2 = toricReflexiveSheaf(2*X_0) ++ toricReflexiveSheaf(3*X_1 - X_2)
            describe F2
            isArithmeticallyFree F2
    SeeAlso
        toricReflexiveSheaf 
        isArithmeticallyFree
///


doc ///
    Key
        (symbol **, ToricReflexiveSheaf, ToricDivisor)
    Headline
        twist a toric reflexive sheaf by a toric divisor 
    Usage
        E ** D
    Inputs
        E : ToricReflexiveSheaf
	D : ToricDivisor
    Outputs
        : ToricReflexiveSheaf
            that is the tensor product of {\tt E} and the torus-equivariant
            line bundle corresponding to {\tt D}	    
    Description
    	Text
	    TODO: explain this construction
    SeeAlso
        (toricReflexiveSheaf, ToricDivisor)
///


doc ///
    Key
        (exteriorPower, ZZ, ToricReflexiveSheaf)
    Headline
        make the exterior power of a toric reflexive sheaf
    Usage
        exteriorPower(p, E)
    Inputs
        p : ZZ
        E : ToricReflexiveSheaf
    Outputs
        : ToricReflexiveSheaf     
            the {\tt p}-th exterior power of {\tt E}
    Description
        Text
            Under the Klyachko equivalence of categories, the exterior power
            of a toric reflexive sheaf $E$ is determined by the exterior power
            of a vector space corresponding to $E$ equipped with the induced
            family of separated exhaustive descreasing filtrations indexed by
            the irreducible torus-invariant divisors.
        Text
            The top exterior power of the tangent bundle corresponds to the
            anti-canonical divisor.
        Example
            X = toricProjectiveSpace 2;
            TX = toricTangentBundle X;
            rank TX
            describe TX
            TX2 = exteriorPower(2,TX);
            rank TX2
            describe TX2
            toricDivisor TX2 == - toricDivisor X
	    assert (isWellDefined TX2 and toricDivisor TX2 == - toricDivisor X)
        Text
            If $E$ has rank $r$, then the $p$-th symmetric power has rank $r$
            choose $p$.
        Example
            R = QQ[e_1,e_2,e_3];
            W' = {{(e_1-e_2,5), (e_2-e_3,2), (e_1,-1)}, {(e_1,6), (e_2,0), (e_3,-1)}, {(e_3,3), (e_2,0), (e_1,-4)}};
            E = toricReflexiveSheaf(W', X);
            r = rank E
            describe E
            apply(components cover E, L -> OO toricDivisor L)
            E2 = exteriorPower(2,E);
            rank E2 == binomial(r,2)
            describe E2
    SeeAlso
        (exteriorPower, ZZ, ToricReflexiveSheaf)
///


doc ///
    Key
        (determinant, ToricReflexiveSheaf)
    Headline
        make the top exterior power of a toric reflexive sheaf
    Usage
        det E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : ToricReflexiveSheaf     
            the top exterior power of {\tt E}
    Description
        Text
            If a toric reflexive sheaf has rank $r$, then its $r$-th exterior
            power has rank $1$.
        Text
            The top exterior power of the tangent bundle corresponds to the
            anti-canonical divisor.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            rank TX
            describe TX
            TX2 = det TX;
            rank TX2
            describe TX2
            toricDivisor TX2 == - toricDivisor X
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2,e_3]);
            W' = {{(e_1-e_2,5), (e_2-e_3,2), (e_1,-1)}, {(e_1,6), (e_2,0), (e_3,-1)}, {(e_3,3), (e_2,0), (e_1,-4)}};
            E = toricReflexiveSheaf(W', X);
            r = rank E
            describe E
            E3 = det E
            rank E3
            describe E3
            toricDivisor E3
    Caveat
        The method ignores the optional arguments.
    SeeAlso
        (exteriorPower, ZZ, ToricReflexiveSheaf)
///


doc ///
    Key
        (symmetricPower, ZZ, ToricReflexiveSheaf)
    Headline
        make the symmetric power of a toric reflexive sheaf
    Usage
        symmetricPower(p, E)
    Inputs
        p : ZZ
        E : ToricReflexiveSheaf
    Outputs
        : ToricReflexiveSheaf     
            the {\tt p}-th symmetric power of {\tt E}
    Description
        Text
            Under the Klyachko equivalence of categories, the symmetric power
            of a toric reflexive sheaf $E$ is determined by the symmetric
            power of a vector space corresponding to $E$ equipped with the
            induced family of separated exhaustive descreasing filtrations
            indexed by the irreducible torus-invariant divisors.
        Text
            If $E$ has rank $r$, then the $p$-th symmetric power has rank
            $r+p-1$ choose $p$.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W, X);
            rank TX
            describe TX
            TX2 = symmetricPower(2,TX);
            rank TX2
            describe TX2
            TX3 = symmetricPower(3,TX);
            rank TX3
            describe TX3
        Text
            The symmetric power of a toric vector bundles correponds to the
            tensor power of the associated line bundle on the projectivization
            of the toric vector bundle.  As a consequence, a sufficiently
            large symmetric power of an ample toric vector bundle is globally
            generated.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2,e_3]);
            W' = {{(e_1-e_2,5), (e_2-e_3,2), (e_1,-1)}, {(e_1,6), (e_2,0), (e_3,-1)}, {(e_3,3), (e_2,0), (e_1,-4)}};
            E = toricReflexiveSheaf(W', X);
            r = rank E 
            describe E
            apply(components cover E, L -> OO toricDivisor L)
            E2 = symmetricPower(2,E);
            rank E2 == binomial(r+2-1,2)
            describe E2
            all(components cover E2, L -> isNef toricDivisor L)
    SeeAlso
        (exteriorPower, ZZ, ToricReflexiveSheaf)
///


doc ///
    Key
        (subspace, ZZ, ZZ, ToricReflexiveSheaf) 
        (subspace, ZZ, InfiniteNumber, ToricReflexiveSheaf)
        subspace
    Headline
        make a linear subspace in corresponding filtration
    Usage
        subspace(i,j,E)
    Inputs
        i : ZZ       
            indexing an irreducible torus-invariant divisor in the underlying
            toric variety
        j : ZZ
            or @TO "InfiniteNumber"@, indexing part of the separated
            exhaustive filtration
        E : ToricReflexiveSheaf
    Outputs
        : Ideal
            in the ambient polynomial ring such the graded component in the
            ambient degree is the corresponding vector space
    Description
        Text
            In this package, the vector space corresponding to the fibre of a
            toric reflexive sheaf over the identity in the torus is realized
            as a linear subspace in a homogeneous component of a graded
            polynomial ring.  This method returns the ideal in this graded
            polynomial ring whose homogeneous component is linear subspace in
            the corresponding flitration.
       
            More precisely, we assume that the irreducible torus-invariant
            divisors on the underlying toric variety (a.k.a. the rays in the
            fan) are ordered and indexed by nonnegative integers (see @TO
            "NormalToricVarieties::normalToricVariety"@), so the first
            argument corresponds to the $i$-th irreducible torus-invariant
            divisor.  The vector space corresponding to the toric reflexive
            sheaf is realized as a linear subspace in a homogeneous component
            of a graded @TO2 ("PolynomialRing", "polynomial ring")@; see @TO
            (ambient, ToricReflexiveSheaf)@.  For a given irreducible
            torus-invariant divisor, the corresponding filtration is defined
            by a list of homogeneous @TO2("RingElement", "ring elements")@ of
            the appropriate degree in this ambient ring together with their
            associated integer weights.  The $j$-th linear subspace in the
            filtration is the homogeneous component of the ideal generated by
            all the ring elements with weight greater than or equal to $j$.
        Text
            Our favourite construction of the tangent bundle on the projective
            plane realizes the ambient vector space as the degree-one
            component of a standard graded polynomial ring in two variables.
        Example
            (X,R) = (toricProjectiveSpace(2), QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X)
            describe TX
            (R,d) = ambient TX
            V = subspace(0,-infinity,TX)
            hilbertFunction(d,module V)
            V0 = subspace(0,0,TX)
            hilbertFunction(d,module V0)       
            V1 = subspace(0,1,TX)       
            hilbertFunction(d,module V1)              
            V2 = subspace(0,2,TX)       
            hilbertFunction(d,module V2)                     
            subspace(0,infinity,TX)              
    SeeAlso
        toricReflexiveSheaf 
        (ambient, ToricReflexiveSheaf)
/// 


doc ///
    Key
        groundSet       
        (groundSet, ToricReflexiveSheaf)
    Headline
        make the associated matroid
    Usage
        groundSet E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : List
            of @TO2("RingElement", "RingElements")@ which form the ground set
            of the associated matroid
    Description
        Text
            Proposition 3.1 in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
            and parliaments of polytopes")@ introduces a canonical
            representable matroid associated to a toric reflexive sheaf.  This
            method returns a list of ring elements which represent this
            matroid in the 
            @TO2("(ambient, ToricReflexiveSheaf)", "ambient vector space")@.
        Text
            Following Example 3.8 in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@, 
            the ground set for the matroid associated to the tangent bundle on
            the projective plane has three elements.
        Example
            (X,R) = (toricProjectiveSpace(2), QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X)
            rank TX
            groundSet TX
            apply(components cover TX, D -> toricDivisor D)       
        Text
            Example 3.7 in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@ 
            shows that the ground set may be strictly larger than the union of
            the bases that split the filtration over the maximal cones.  In
            particular, for this toric vector bundle, the ground set has five
            elements.
        Example
            (Y,S) = (toricProjectiveSpace(1) ** toricProjectiveSpace(1), QQ[e_1,e_2,e_3]);
            V = {{(e_1+e_3,1),(e_3,0),(e_2,-1)},{(e_1+e_2,1),(e_2,0),(e_3,-1)},
                {(e_2,2),(e_3,1),(e_1+e_3,0)},{(e_2,2),(e_3,1),(e_1+e_2,0)}};
            E = toricReflexiveSheaf(V,Y);
            rank E
            groundSet E
            F = cover E;
            apply(components F, D -> toricDivisor D)
            apply(components F, D -> HH^0(Y, OO(toricDivisor D)))
        Text
            The ground set for a direct sum is essentially the union of the
            ground sets of the summands.
        Example
            G = TX ++ toricReflexiveSheaf(2*X_0) ++ toricReflexiveSheaf(3*X_1-X_2)
            describe G
            rank G
            groundSet G       
    SeeAlso
        toricReflexiveSheaf 
        (cover, ToricReflexiveSheaf)
///
 
 
doc ///
    Key
        (isArithmeticallyFree, ToricReflexiveSheaf)
        isArithmeticallyFree
    Headline
        whether a toric reflexive sheaf is a direct sum of toric line bundles
    Usage
        isArithmetically E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Boolean
            that is @TO true@ if the toric reflexive sheaf is isomorphic to a
            direct sum of torus-equivariant line bundles
    Description
        Text     
            A toric reflexive sheaf is isomorphic to a direct sum of
            torus-equivarient line bundles if and only if its rank is equal to
            the cardinality of its ground set; see Remark 3.3. in
            DiRocco-Jabbusch-Smith's @HREF ("https://arxiv.org/abs/1409.3109",
            "Toric vector bundles and parliaments of polytopes")@.
        Text
            The tangent bundle on projective $2$-space does not split into a
            direct sum of torus-equivariant line bundles, but its cover does.
        Example
            (X,R) = (toricProjectiveSpace(2),QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X)
            isArithmeticallyFree TX
            F = cover TX
            isArithmeticallyFree F
            apply(components F, D -> toricDivisor D)
        Text
            By definition, the direct sum of two toric line bundles is
            arithmetically free.
        Example       
            E = toricReflexiveSheaf(2*X_0) ++ toricReflexiveSheaf(3*X_1 - X_2);
            describe E
            isArithmeticallyFree E
    SeeAlso
        (directSum, ToricReflexiveSheaf)
        (cover, ToricReflexiveSheaf)
        (toricReflexiveSheaf, ToricDivisor)
///
 
 
doc ///
    Key
        (isLocallyFree, ToricReflexiveSheaf)
	isLocallyFree
    Headline
        twist a toric reflexive sheaf by a toric divisor 
    Usage
        isLocallyFree E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Boolean
            that is @TO true@ if ...
    Description
    	Text
	    TODO: explain this test
    SeeAlso
        (isArithmeticallyFree, ToricReflexiveSheaf)
///


doc ///
    Key
    	(associatedCharacters, ToricReflexiveSheaf)
	associatedCharacters
    Headline
    	?? 
    Usage
    	associatedCharacters E
    Inputs
    	E : ToricReflexiveSheaf
    Outputs
    	: List
	    of lists that ...
    Description
    	Text
	    TODO: explain what this does
    SeeAlso
    	(groundSet, ToricReflexiveSheaf)
///


doc ///
    Key
        (isGloballyGenerated, ToricReflexiveSheaf)
	isGloballyGenerated
    Headline
        whether a toric reflexive sheaf is generated by its global sections
    Usage
        isGloballyGenerated E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : Boolean
            that is @TO true@ if ...
    Description
    	Text
	    TODO: explain this test
    SeeAlso
        (isArithmeticallyFree, ToricReflexiveSheaf)
	(cover, ToricReflexiveSheaf)	
///
 
doc /// 
    Key
        separatesJets
        (separatesJets, ToricReflexiveSheaf)
    Headline
        computes up to which order a toric vector bundle separates jets
    Usage
        separatesJets E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        : ZZ
    Consequences
        Item
            The result will be stored as a cacheValue.
    Description
        Text
            Given a toric vector bundle on a smooth projective toric variety, {\tt separatesJets} determines up to which order the vector bundle separates jets. Note that a toric vector bundle is globally generated or very ample, if it separates 0-jets or 1-jets, respectively, see [RJS, Theorem 1.2, 6.2 and 6.5]. 
            If the vector bundle is not even globally generated, then {\tt separatesJets} returns the value -1. 
        Example
            P2 = toricProjectiveSpace 2
            T = toricTangentBundle P2
            separatesJets T
            isGloballyGenerated T
            isVeryAmple T
    Caveat
        The algorithm should work reliable for toric vector bundles on smooth projective toric varieties, by the theoretical bases [RJS, Theorem 6.2].
        For reflexive sheaves on more general toric varieties, the algorithm might break or give a meaningless result.
    SeeAlso
        (isGloballyGenerated, ToricReflexiveSheaf)
        (isVeryAmple, ToricReflexiveSheaf)
///

doc ///
    Key
        restrictToCurve
        (restrictToCurve, List, ToricReflexiveSheaf)
        (isAmple, ToricReflexiveSheaf)
        (isNef, ToricReflexiveSheaf)
    Headline
        computes the restriction of a toric vector bundle to a torus invariant curve
    Usage
        F = restrictToCurve(tau, E)
        b = isNef E
        b = isAmple E
    Inputs
        tau : List
            of indices of rays of the underlying fan which correspond to an invariant curve
        E : ToricReflexiveSheaf
    Outputs
        F : ToricReflexiveSheaf
            which is a @TO (directSum,ToricReflexiveSheaf)@ of line bundles on $\mathbb P^1$
        b : Boolean
            that is {\tt true} if the bundle is nef or ample
    Description
    	Text
	    Given a toric vector bundle on a projective toric variety, {\tt restrictToCurve} computes its restriction to a torus invariant curve, which is isomorphic to a direct sum of line bundles  on $\mathbb P^1$.
            By [HMP, Theorem 2.1], if all these line bundles have non-negative or positive degree for all torus invariant curves on the variety, the original toric vector bundle is nef or ample. Hence, the methods {\tt isNef} and {\tt isAmple} check exactly that.
        Example
            P2 = toricProjectiveSpace 2
            T = toricTangentBundle P2
            F = restrictToCurve({0},T)
            apply(components F, toricDivisor)
            isNef T
            isAmple T
    Caveat
        The algorithm should work reliable for toric vector bundles on projective toric varieties, by the theoretical bases [HMP, Theorem 2.1].
        For reflexive sheaves on more general toric varieties, the algorithm might break or give a meaningless result.
///

doc ///
    Key
        (cover, ToricReflexiveSheaf)
    Headline
        make the canonical reflexive sheaf that surjects on the global sections     
    Usage
        F = cover E
    Inputs
        E : ToricReflexiveSheaf
    Outputs
        F : ToricReflexiveSheaf     
            the unique minimal arthimetically free reflexive sheaf that
            surjects onto the global section of {\tt E}
    Description
        Text     
            Proposition 1.1. in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
            and parliaments of polytopes")@ 
            describes the minimal collection of toric line bundles that
            surject onto the global sections of a toric vector bundle.  This
            method returns the direct sum of these rank-one toric reflexive
            sheaves.
        Text
            Following Example 3.8 in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@, 
            we obtain part of the Euler sequence from the tangent bundle on
            the projective plane.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            F = cover TX;
            describe F
            apply(components F, E -> toricDivisor E)
    SeeAlso
        toricReflexiveSheaf 
        (generators, ToricReflexiveSheaf)
///


doc ///
    Key
        (generators, ToricReflexiveSheaf)
    Headline
        gets the equivariant map from the cover    
    Usage
        generators E
        gens E
    Inputs
        E : ToricReflexiveSheaf
	CoefficientRing => Ring
	   unused
    Outputs 
        : ToricReflexiveSheafMap
    Description
        Text     
            Proposition 1.1. in DiRocco-Jabbusch-Smith's 
            @HREF ("https://arxiv.org/abs/1409.3109", "Toric vector bundles
                and parliaments of polytopes")@ 
            describes the minimal collection of toric line bundles that
            surject onto the global sections of a toric vector bundle.  This
            method returns the equivariant map from this the direct sum of the
            rank-one toric reflexive sheaves to the given toric reflexive
            sheaf.
        Text
            The underlying matrix of this map captures the coefficients of the
            elements in the ground set
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            F = cover TX;
            gens TX       
            rank TX
            rank F
            groundSet TX
    Caveat
        The method ignores the optional arguments.    
    SeeAlso
        (cover, ToricReflexiveSheaf)
///
 



 
doc ///
    Key
        ToricReflexiveSheafMap
    Headline
        the class of all the equivariant maps between toric reflexive sheaves
    Description
        Text
            Theorem 1.3.2 in Klyachko's 
            @HREF ("http://www.mpim-bonn.mpg.de/preblob/4712","Vector bundles
                and torsion free sheaves on the projective plane")@ 
            establishes that the category of toric reflexive sheaves is
            equivalent to the category of vector spaces with a family of
            separated exhaustive decreasing filtrations indexed by the
            irreducible torus-invariant divisors.  Under this equivalence, an
            equivariant map of toric reflexive sheaves corresponds to a linear
            map between the ambient vector spaces that is compatible with the
            families of separated exhaustive decreasing filtrations.
            Specifically, the image of each part in a filtration associated to
            the source lies in the corresponding part in the filtration
            associated to the target.
    SeeAlso
      (ambient, ToricReflexiveSheaf)
///
 
doc ///
    Key
        (source, ToricReflexiveSheafMap)
    Headline
        get the source
    Usage
        source f
    Inputs
        f : ToricReflexiveSheafMap
    Outputs
        : ToricReflexiveSheaf     
            the source of the equivariant map of toric reflexive sheaf
    Description
        Text
            For identity map on the tangent bundle on the projective plane, we
            see that the source and target is just the tangent bundle.
        Example
            (X, R) = (toricProjectiveSpace 2 , QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            f = map(TX, TX, 1)
            source f
            source f === TX
        Text
            By definition, the generators of a toric reflexive sheaf is the
            equivariant map from its cover to itself.
        Example
            F = cover TX
            g = gens TX
            source g === F
    SeeAlso
        (target, ToricReflexiveSheafMap)
///
 
doc ///
    Key
        (target, ToricReflexiveSheafMap)
    Headline
        get the target
    Usage
        target f
    Inputs
        f : ToricReflexiveSheafMap
    Outputs
        : ToricReflexiveSheaf     
             the target of the equivariant map of toric reflexive sheaf
    Description
        Text
            For identity map on the tangent bundle on the projective plane, we
            see that the source and target is just the tangent bundle.
        Example
            (X, R) = (toricProjectiveSpace 2, QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            f = map(TX, TX, 1)
            target f
            target f === TX
        Text
            By definition, the generators of a toric reflexive sheaf is the
            equivariant map from its cover to itself.
        Example
            F = cover TX
            g = gens TX
            target g === TX
    SeeAlso
        (source, ToricReflexiveSheafMap)
///
 
doc ///
    Key
        (matrix, ToricReflexiveSheafMap)
    Headline
        get the underlying linear map
    Usage
        matrix f
    Inputs
        f : ToricReflexiveSheafMap
    Outputs
        : Matrix     
            the underlying linear map between corresponding vector spaces
    Description
        Text
            Under the Klyachko equivalence, an equivariant map of toric
            reflexive sheaves corresponds to a linear map between the ambient
            vector spaces that is compatible with the families of separated
            exhaustive decreasing filtrations.  Specifically, the image of
            each part in a filtration associated to the source lies in the
            corresponding part in the filtration associated to the target.
            This routine returns the correpsonding linear map represented as a
            matrix relatively the the monomial basis for the homogeneous
            component of the ambient ring.
        Text
            For identity map on the tangent bundle on the projective plane, we
            get the identity matrix.
        Example
            (X, R) = (toricProjectiveSpace 2 , QQ[e_1,e_2]);
            W = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
            TX = toricReflexiveSheaf(W,X);
            rank TX       
            f = map(TX, TX, 1)
            matrix f
        Text
            By definition, the generators of a toric reflexive sheaf is the
            equivariant map from its cover to itself.  In this case, the
            matrix captures the coefficients of the elements in the ground
            set.
        Example
            F = cover TX
            g = gens TX
            groundSet TX
    Caveat
        This routine ignores the option arguments.
    SeeAlso
        (ambient, ToricReflexiveSheaf)
        (groundSet, ToricReflexiveSheaf)
        (generators, ToricReflexiveSheaf)
///


doc ///
    Key
        (isWellDefined, ToricReflexiveSheafMap)
    Headline
        whether an equivariant map of toric reflexive sheaves is well-defined
    Usage
        isWellDefined f
    Inputs
        f : ToricReflexiveSheafMap
    Outputs
        : Boolean
            that is @TO true@ if the linear map determines an equivariant map
            of toric reflexive sheaves
    Description
        Text
            A linear map between the ambient vector spaces of two toric
            reflexive sheaves determines an equivariant map of toric
            reflexives sheaves if the following conditions hold:
    	Text       
            @UL {
         	{"the source and target have the same underlying normal toric
         	    variety"},
                {"the linear map is compatible with the filtrations; the image
           	    of each part in the filtrations associated to the source
           	    lies in the corresponding part in the filtration
           	    associated to the target."}
	    }@
        Text
            The identity map and the zero map yield equivariant maps of toric
       	    reflexive sheaves.
	Example
            X = toricProjectiveSpace 2;
       	    TX = toricTangentBundle X;
       	    f = map(TX, TX, 1)
       	    assert (isWellDefined f and isWellDefined map(TX, TX, 0))
	Text
            There is a canonical map from the arithmetically-free toric
       	    reflexive sheaf that covers a given toric reflexive sheaf.
	Example       
       	    F = cover TX
       	    g = gens TX
       	    assert (isWellDefined g and source g === F and target g === TX)
       	    matrix g
	Text
            The next examples illustrate various ways that the input can fail
       	    to define an equivariant map of toric reflexive sheaves.  By
       	    making the current debugging level greater than one, one gets some
       	    addition information about the nature of the failure.
	Example
       	    (Y,S) = (toricProjectiveSpace(1) ** toricProjectiveSpace(1), QQ[e_1,e_2,e_3]);
            V = {{(e_1+e_3,1),(e_3,0),(e_2,-1)},{(e_1+e_2,1),(e_2,0),(e_3,-1)},{(e_2,2),(e_3,1),(e_1+e_3,0)},{(e_2,2),(e_3,1),(e_1+e_2,0)}};
            E1 = toricReflexiveSheaf(V,Y);
            isWellDefined E1
       	    debugLevel = 1;           
       	    f1 = map(TX,E1,0)
       	    isWellDefined f1
	    assert (isWellDefined E1 and not isWellDefined f1 and variety TX =!= variety E1)
	Example
       	    R' = ZZ/101[e_1,e_2];
       	    W' = {{(-e_1-e_2,1),(e_1,0)},{(e_1,1),(e_2,0)},{(e_2,1),(e_1,0)}};
       	    E2 = toricReflexiveSheaf(W',X);
       	    isWellDefined E2
       	    f2 = map(TX, E2, 1)       
       	    isWellDefined f2 
	    assert (isWellDefined E2 and not isWellDefined f2 and     
		coefficientRing (ambient TX)#0 =!= coefficientRing (ambient E2)#0)
	Example
            f3 = map(TX, TX, {{1,0},{1,1}})
            isWellDefined f3
	    R = (ambient TX)#0
            basis(1,R)
            subspace(0,1,TX)
	    assert (not isWellDefined f3)
	Text
            This method also checks that the following aspects of the data
       	    structure:
	Text
       	   @UL {
	       {"the underlying ", TO HashTable, " has the expected keys, namely ",
           	   TT "source", ", ", TT "target", ", ", TT "matrix", ", and ", 
           	   TT "cache"},     
               {"the value of the ", TT "source", " key is a ", 
           	   TO ToricReflexiveSheaf},
	       {"the value of the ", TT "target", " key is a ", 
           	   TO ToricReflexiveSheaf},
	       {"the value of the ", TT "cache", " key is a ", TO CacheTable}
            }@
    SeeAlso 
        (cover, ToricReflexiveSheaf)
///


doc ///
    Key
        (mukaiLazarsfeldBundle, ToricDivisor)
        mukaiLazarsfeldBundle	
    Headline
        make the kernel bundle 
    Usage
        mukaiLazarsfeldBundle D
    Inputs
        D : ToricDivisor
    Outputs
        : ToricReflexiveSheaf     
            representing the kernel of the map from the space of global
            sections to the corresponding rank-one reflexive sheaf
    Description
        Text
            If the toric divisor {\tt D} is globally generated, then the
            Mukai-Lazarsfeld bundle is the kernel of the canonial surjective
            map from the vector space global sections of {\tt OO(D)} tensor
            the structure sheaf {\tt OO_X} to the line bundle {\tt OO(D)}.
        Text
            The Euler sequence realizes a twist of the cotangent bundle on
            projective space as a Mukai-Lazarsfeld bundle.
        Example
            X = toricProjectiveSpace(2);
            ML = mukaiLazarsfeldBundle X_0
            E = cover toricReflexiveSheaf X_0
            describe ML
            rank ML    
        Text
            ML2 = mukaiLazarsfeldBundle(2*X_0);
            describe ML2
    SeeAlso
        ToricDivisor
///
